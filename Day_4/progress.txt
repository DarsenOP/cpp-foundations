Progress Report â€“ Task Manager CLI (Day 4)

ðŸ“… Date: 02/04/25
ðŸ•’ Time Spent: 6-8h
âœ… What I Did Today

    Finalized Core Structure
        Organized project with CMake.
        Structured Manager.h, Manager.cpp, Tasks.h, and taskpch.h.

    Implemented Core Task Management Features
        add â€“ Added tasks with --description, --priority, --due, --tags.
        list â€“ Displayed tasks in formatted table using std::setw.
        edit â€“ Modified task attributes (description, priority, status, due date).
        delete â€“ Removed tasks using --id.
        complete â€“ Marked tasks as completed.
        help â€“ Provided detailed help output for commands and flags.
        exit â€“ Implemented interactive CLI loop where users can type commands inside tasks>.

    Improved Input Parsing
        Handled quoted text correctly (e.g., "multi word input" stays together).
        Extracted flags and values into m_flags map.
        Implemented InitFlagMap() to parse user inputs properly.

    Enhanced Error Handling
        Validated commands (unknown commands show error + suggest help).
        Checked missing flags (e.g., --id required for edit, delete, complete).
        Prevented invalid ID crashes (used std::stoi inside try-catch).
        Cleared m_flags after each command to avoid conflicts.

    Refactored & Optimized Code
        Used unordered_map for flag-value pairs (better efficiency).
        Switched std::endl â†’ "\n" for performance.
        Ensured m_prev_id++ correctly assigns unique task IDs.

ðŸ“Œ Next Steps

    ðŸ”¹ Implement Task Persistence â€“ Save & load tasks from a file.
    ðŸ”¹ Improve Search & Filtering â€“ Filter by priority, due date, tags.
    ðŸ”¹ Sort Tasks â€“ Sort by due date, priority, or ID.
    ðŸ”¹ Handle Multi-Value Flags â€“ Properly process multiple --tags.
    ðŸ”¹ Optimize UI â€“ Improve feedback, command suggestions, etc.